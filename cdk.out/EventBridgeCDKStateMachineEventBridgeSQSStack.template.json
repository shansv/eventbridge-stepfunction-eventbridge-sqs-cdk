{
 "Resources": {
  "stepFunctionExecutionLambdaServiceRole90B2C149": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EventBridgeCDKStateMachineEventBridgeSQSStack/stepFunctionExecutionLambda/ServiceRole/Resource"
   }
  },
  "stepFunctionExecutionLambdaB5A9F726": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "664e36c0fb888cdf585c0277a52ab1d50b5341664a3f119e5640680297b733e2.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "stepFunctionExecutionLambdaServiceRole90B2C149",
      "Arn"
     ]
    },
    "Handler": "stepFunctionExecution.handler",
    "Runtime": "nodejs14.x",
    "Timeout": 900
   },
   "DependsOn": [
    "stepFunctionExecutionLambdaServiceRole90B2C149"
   ],
   "Metadata": {
    "aws:cdk:path": "EventBridgeCDKStateMachineEventBridgeSQSStack/stepFunctionExecutionLambda/Resource",
    "aws:asset:path": "asset.664e36c0fb888cdf585c0277a52ab1d50b5341664a3f119e5640680297b733e2",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "EventBridgeStateMachineEventBridgeSQSCDKRoleAE49B49B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::Join": [
          "",
          [
           "states.",
           {
            "Ref": "AWS::Region"
           },
           ".amazonaws.com"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EventBridgeCDKStateMachineEventBridgeSQSStack/EventBridgeStateMachineEventBridgeSQSCDK/Role/Resource"
   }
  },
  "EventBridgeStateMachineEventBridgeSQSCDKRoleDefaultPolicy0320590F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "stepFunctionExecutionLambdaB5A9F726",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "stepFunctionExecutionLambdaB5A9F726",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "EventBridgeStateMachineEventBridgeSQSCDKRoleDefaultPolicy0320590F",
    "Roles": [
     {
      "Ref": "EventBridgeStateMachineEventBridgeSQSCDKRoleAE49B49B"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EventBridgeCDKStateMachineEventBridgeSQSStack/EventBridgeStateMachineEventBridgeSQSCDK/Role/DefaultPolicy/Resource"
   }
  },
  "EventBridgeStateMachineEventBridgeSQSCDK169D119E": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "RoleArn": {
     "Fn::GetAtt": [
      "EventBridgeStateMachineEventBridgeSQSCDKRoleAE49B49B",
      "Arn"
     ]
    },
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"Business Execution Job\",\"States\":{\"Business Execution Job\":{\"Next\":\"Does execution successfull?\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"Failure Exception\"],\"MaxAttempts\":1}],\"Catch\":[{\"ErrorEquals\":[\"States.ALL\"],\"ResultPath\":\"$.message.errorMessage\",\"Next\":\"Execution Failed\"}],\"Type\":\"Task\",\"OutputPath\":\"$.Payload\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "stepFunctionExecutionLambdaB5A9F726",
         "Arn"
        ]
       },
       "\",\"Payload.$\":\"$\"}},\"Does execution successfull?\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.processedInput.transactionStatus\",\"StringEquals\":\"completed\",\"Next\":\"Execution Succeed\"}],\"Default\":\"Execution Failed\"},\"Execution Failed\":{\"Type\":\"Fail\"},\"Execution Succeed\":{\"Type\":\"Succeed\"}}}"
      ]
     ]
    },
    "StateMachineName": "EventBridgeStateMachineEventBridgeSQSCDK"
   },
   "DependsOn": [
    "EventBridgeStateMachineEventBridgeSQSCDKRoleDefaultPolicy0320590F",
    "EventBridgeStateMachineEventBridgeSQSCDKRoleAE49B49B"
   ],
   "Metadata": {
    "aws:cdk:path": "EventBridgeCDKStateMachineEventBridgeSQSStack/EventBridgeStateMachineEventBridgeSQSCDK/Resource"
   }
  },
  "EventBridgeStateMachineEventBridgeSQSCDKEventsRole1900DAE5": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "events.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EventBridgeCDKStateMachineEventBridgeSQSStack/EventBridgeStateMachineEventBridgeSQSCDK/EventsRole/Resource"
   }
  },
  "EventBridgeStateMachineEventBridgeSQSCDKEventsRoleDefaultPolicy2F6BD03A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "states:StartExecution",
       "Effect": "Allow",
       "Resource": {
        "Ref": "EventBridgeStateMachineEventBridgeSQSCDK169D119E"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "EventBridgeStateMachineEventBridgeSQSCDKEventsRoleDefaultPolicy2F6BD03A",
    "Roles": [
     {
      "Ref": "EventBridgeStateMachineEventBridgeSQSCDKEventsRole1900DAE5"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EventBridgeCDKStateMachineEventBridgeSQSStack/EventBridgeStateMachineEventBridgeSQSCDK/EventsRole/DefaultPolicy/Resource"
   }
  },
  "stepFunctionEventBus877338E6": {
   "Type": "AWS::Events::EventBus",
   "Properties": {
    "Name": "EventBridgeCDKStateMachineEventBridgeSQSStackstepFunctionEventBus583ED52C"
   },
   "Metadata": {
    "aws:cdk:path": "EventBridgeCDKStateMachineEventBridgeSQSStack/stepFunctionEventBus/Resource"
   }
  },
  "stepFunctionExecutionrule75373645": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "EventBusName": {
     "Ref": "stepFunctionEventBus877338E6"
    },
    "EventPattern": {
     "source": [
      "CustomEvent"
     ],
     "detail-type": [
      "CREATE",
      "UPDATE",
      "DELETE"
     ]
    },
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Ref": "EventBridgeStateMachineEventBridgeSQSCDK169D119E"
      },
      "DeadLetterConfig": {
       "Arn": {
        "Fn::GetAtt": [
         "aysncDLQD7291893",
         "Arn"
        ]
       }
      },
      "Id": "Target0",
      "RetryPolicy": {
       "MaximumEventAgeInSeconds": 7200,
       "MaximumRetryAttempts": 3
      },
      "RoleArn": {
       "Fn::GetAtt": [
        "EventBridgeStateMachineEventBridgeSQSCDKEventsRole1900DAE5",
        "Arn"
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EventBridgeCDKStateMachineEventBridgeSQSStack/stepFunctionExecution-rule/Resource"
   }
  },
  "aysncDLQD7291893": {
   "Type": "AWS::SQS::Queue",
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "EventBridgeCDKStateMachineEventBridgeSQSStack/aysncDLQ/Resource"
   }
  },
  "aysncDLQPolicy6855FD6E": {
   "Type": "AWS::SQS::QueuePolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "sqs:SendMessage",
       "Condition": {
        "ArnEquals": {
         "aws:SourceArn": {
          "Fn::GetAtt": [
           "stepFunctionExecutionrule75373645",
           "Arn"
          ]
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Service": "events.amazonaws.com"
       },
       "Resource": {
        "Fn::GetAtt": [
         "aysncDLQD7291893",
         "Arn"
        ]
       },
       "Sid": "AllowEventRuleEventBridgeCDKStateMachineEventBridgeSQSStackstepFunctionExecutionrule045AF389"
      }
     ],
     "Version": "2012-10-17"
    },
    "Queues": [
     {
      "Ref": "aysncDLQD7291893"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EventBridgeCDKStateMachineEventBridgeSQSStack/aysncDLQ/Policy/Resource"
   }
  },
  "StepfunctionFailureQueueAA30A6A7": {
   "Type": "AWS::SQS::Queue",
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "EventBridgeCDKStateMachineEventBridgeSQSStack/Step function Failure Queue/Resource"
   }
  },
  "StepfunctionFailureQueuePolicy655FC167": {
   "Type": "AWS::SQS::QueuePolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:SendMessage"
       ],
       "Condition": {
        "ArnEquals": {
         "aws:SourceArn": {
          "Fn::GetAtt": [
           "stepfunctionexecutionfailedeventrule31BF2A42",
           "Arn"
          ]
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Service": "events.amazonaws.com"
       },
       "Resource": {
        "Fn::GetAtt": [
         "StepfunctionFailureQueueAA30A6A7",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Queues": [
     {
      "Ref": "StepfunctionFailureQueueAA30A6A7"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EventBridgeCDKStateMachineEventBridgeSQSStack/Step function Failure Queue/Policy/Resource"
   }
  },
  "stepfunctionexecutionfailedeventrule31BF2A42": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "EventPattern": {
     "source": [
      "aws.states"
     ],
     "detail-type": [
      "Step Functions Execution Status Change"
     ],
     "detail": {
      "status": [
       "FAILED",
       "TIMED_OUT",
       "ABORTED"
      ],
      "stateMachineArn": [
       {
        "Ref": "EventBridgeStateMachineEventBridgeSQSCDK169D119E"
       }
      ]
     }
    },
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "StepfunctionFailureQueueAA30A6A7",
        "Arn"
       ]
      },
      "Id": "Target0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EventBridgeCDKStateMachineEventBridgeSQSStack/stepfunctionexecution-failed-event-rule/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1VQ207DMAz9lr27gbEXXmnFpEkgoHxAlaXe5qVNxhwXoar/TpIOGC855/hybOdOre7VcqE/uTCtLTraqvE9aGMhhpqRA5524kwg7zhmxBjEFtaaOqgOngxCrA74rM2BHEK1c9d6gk7321arcX0xSRU/fALSvRpr3+XGjK++I/OV5Mwm4FWjmTGwekgQtSrFWAylZoR/CzZBs2X1lGdu3OAtAg7oYu/4mLAUTta/vJbL6Ihx0kesexOUHJtJfv+WupLTBHmheO+e3D5lXyScJGRDZC9nk40q71qa73W+RXXkm2EZP13dLo5MVJzFBepR1TN+A0QN/RKSAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "EventBridgeCDKStateMachineEventBridgeSQSStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "EventCustomBus": {
   "Description": "The custom Event Bus Name",
   "Value": {
    "Ref": "stepFunctionEventBus877338E6"
   },
   "Export": {
    "Name": "stepFunctionEventBus"
   }
  },
  "StepFunction": {
   "Description": "The name of the stepfunction workflow",
   "Value": {
    "Fn::GetAtt": [
     "EventBridgeStateMachineEventBridgeSQSCDK169D119E",
     "Name"
    ]
   },
   "Export": {
    "Name": "eventBridgestepFunctionName"
   }
  },
  "EventBridgeFailureDLQ": {
   "Description": "EventBridge Step function Failure innovation DLQ",
   "Value": {
    "Fn::GetAtt": [
     "aysncDLQD7291893",
     "QueueName"
    ]
   },
   "Export": {
    "Name": "failureDLQSQSName"
   }
  },
  "StepfunctionFailureEventsQueue": {
   "Description": "Step function Failure Events Queue",
   "Value": {
    "Fn::GetAtt": [
     "StepfunctionFailureQueueAA30A6A7",
     "QueueName"
    ]
   },
   "Export": {
    "Name": "failureEventSQSName"
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}